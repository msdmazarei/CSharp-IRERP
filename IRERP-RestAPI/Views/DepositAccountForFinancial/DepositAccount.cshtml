@using IRERP_RestAPI.Bases.Extension.HTML;
@using IRERP_RestAPI.Bases.Extension.HTML.Controls;
@using IRERP_RestAPI.Bases.Extension.HTML.Controls.Types;
@using IRERP_RestAPI.Bases;
@using IRERP_RestAPI.Bases.Extension.Methods;
@using  IRERP_RestAPI.Models;
@{
    IRERP_RestAPI.MetaModel.Support_MetaModel model = Model;
    IRERPPageString CurPage = new IRERPPageString();

    var UsrSupportDs = model.GenDS(
    x => x.AllUsers, SpecMetaModelProfile: IRERP_RestAPI.Bases.MetaDataDescriptors.IRERPProfile.SupportUser_Overview,
 ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
 ID: this.CID("UserSupportDs")
 );
 
    var UsrDtlSupportDs = model.GenDS(
x => x.AllUsers,
SpecMetaModelProfile: IRERP_RestAPI.Bases.MetaDataDescriptors.IRERPProfile.Detail,
ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
ID: this.CID("UsrDtlSupportDs")
);
    var UsrAccountDs = model.GenDS(
   x => x.SelectedUser.ACCs,
   ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
   ID:this.CID("UserAccountDs")
   );



    var UserSelectItem = IRERP_RestAPI.Bases.Skins.AbbasiAdmin.GGSelectItem<PetiakWifiUserAcc,User>(
   this.CID("selectUser"),
   x => x.User.UserID,
     "نام کاربری",
   x => x.DisplayName,
   x => x.UserID,
   null,
   this.CID("UserSupportDs"),
   new IRERPControlTypes_StringMethods("function(form,item,rec){" +
                  this.CID("lstAccountInformation") + ".fetchData({ _SelectedUser___UserID: rec });" +

                  "}", true),
   true,
   true,
 x => x.DisplayName,
 x => x.UserID

 );


    var information = IRERP_RestAPI.Bases.Skins.AbbasiAdmin.GetGenetalDynamicForm(this.CID("UserForm"), data: new IRERP_SM_FromString(UsrAccountDs.ID));

    information.fields = new IRERP_SM_FormItem[]
      {
          UserSelectItem
      
               
             
        
    };
 


   // var detail = new IRERP_SM_DynamicForm()
   //{
   //    dataSource = new IRERP_SM_FromString(this.CID("UsrDtlSupportDs"), false),
   //  ID= this.CID("frmDetail"),
   //    numCols = 2,
   //    items = new IRERP_SM_FormItem[] {
   //            new IRERP_SM_StaticTextItem(){title="نام",canEdit=false,name="DisplayName",titleStyle="Blacklabel1",textBoxStyle="Blacklabel1"},
           
   //    }
   //};

    var TopInfornation = new IRERP_SM_VLayout()
    {

        //width = "100%",
        //height = "100%",

        members = new IRERPControlBase[] { information }
    };

    var AccountInformation = IRERP_RestAPI.Bases.Skins.AbbasiAdmin.GetGeneralListGrid(Datasource: new IRERP_SM_FromString(UsrAccountDs.ID), ID: this.CID("lstAccountInformation"));
    AccountInformation.fields =
new IRERPControlTypes_ListGridFiled[] {
      
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Balance)}, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Credit) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Debit) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.TransDate) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Description) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Operator.DisplayName),title="نام اپراتور"}, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.ActivityID),title="مرجع داخلی"}, 
             
           
        };



    var lableForDepositAccountUser = new IRERP_SM_Label() { contents = new IRERPControlTypes_HTMLString("شما در حال واریز اعتبار برای مشترک abbasi.s@yahoo.com هستید"), baseStyle = "Blacklabel", };
    var ReturnbuttonForDepositAccountUser = new IRERP_SM_Button() { title = new IRERPControlTypes_HTMLString("بازگشت") };
    var DepositaccountforUserDataSource = 
        new IRERP_SM_FromString(@"
                isc.ListGrid.create({
                    ID: ""countryList"",
                    width:""100%"", height:""100%"",
alternateRecordStyles :false,membersMargin :0,
    canEdit:false,  showHeader :true, 
    data: [

{
    AccountName:""بانک سامان"",
    AccountProfile:""صندوق موقت"",
    AccountType:""مجازی"",
    lastChangedate:""1392.2.30"",
    lastChange:""صندوق موقت"",
    Visibility:""فعال"",
    state:""واریز موجودی""
 
},

{
    AccountName:""بانک سامان"",
    AccountProfile:""صندوق موقت"",
    AccountType:""مجازی"",
    lastChangedate:""1392.2.30"",
    lastChange:""صندوق موقت"",
    Visibility:""فعال"",
    state:""واریز موجودی""
 
},{
    AccountName:""بانک سامان"",
    AccountProfile:""صندوق موقت"",
    AccountType:""مجازی"",
    lastChangedate:""1392.2.30"",
    lastChange:""صندوق موقت"",
    Visibility:""فعال"",
    state:""واریز موجودی""
 
},{
    AccountName:""بانک سامان"",
    AccountProfile:""صندوق موقت"",
    AccountType:""مجازی"",
    lastChangedate:""1392.2.30"",
    lastChange:""صندوق موقت"",
    Visibility:""فعال"",
    state:""واریز موجودی""
 
},{
    AccountName:""بانک سامان"",
    AccountProfile:""صندوق موقت"",
    AccountType:""مجازی"",
    lastChangedate:""1392.2.30"",
    lastChange:""صندوق موقت"",
    Visibility:""فعال"",
    state:""واریز موجودی""
 
},    ],
    fields:[
{name:""AccountName"",title:""نام حساب""},
{name:""AccountProfile"",title:""مشخصات حساب""},
{name:""AccountType"",title:""نوع حساب""},
{name:""lastChangedate"",title:""تاریخ آخرین تغییر""},
{name:""lastChange"",title:""آخرین تغییر""},
{name:""Visibility"",title:""فعال""},
{name:""state"",title:""""},



]

            })
                   
               ", false);

    var BodyDepositAccount = new IRERP_SM_VLayout()
    {
     
        members = new IRERPControlBase[] { lableForDepositAccountUser, DepositaccountforUserDataSource, ReturnbuttonForDepositAccountUser }
    };

 

    var TransferCredit = new IRERP_SM_VLayout()
    {
      
        members = new IRERPControlBase[]{
        new IRERP_SM_DynamicForm() {
    numCols=2,
    items=new IRERP_SM_FormItem[]{
        new IRERP_SM_HeaderItem(){title="ثبت انتقالی های مشترک",defaultValue="ثبت انتقالی های مشترک"},
        new IRERP_SM_HeaderItem(){title="abbasi.s@yahoo.comدرخواست انتقال وجه از ",defaultValue="abbasi.s@yahoo.comدرخواست انتقال وجه از "},
         new IRERP_SM_SelectItem(){
                 ID=this.CID("cbotest1"),
                 name="FilterSelect1",title="نام مشترک",displayField="DisplayName",valueField="UserID", 
                 pickListProperties=new IRERP_SM_ListGrid(){showFilterEditor=true},
                 editorType=new IRERP_SM_FormItem(){type=IRERPControlTypes_FormItemType.SelectItem},
                 pickListFields=new IRERP_SM_ListGridFiled[]{new IRERP_SM_ListGridFiled(){name="DisplayName"},
                     new IRERP_SM_ListGridFiled(){name="Email"}  },
                 optionDataSource=this.CID("UserSupportDs"),autoFetchData=true
             },
              new IRERP_SM_ButtonItem(){title="جستجو"},
        new IRERP_SM_TextItem(){title="میزان انتقال موجودی"},
              new IRERP_SM_ButtonItem(){title="به حروف"},
        
         new IRERP_SM_TextAreaItem(){title="اطلاعات انتقال وجه",type=IRERPControlTypes_FormItemType.textArea}
        
    }},
     new IRERP_SM_HLayout()
                   {
                       width="100%",
                       height="100%",
                      
                       members=new IRERPControlBase[]{ 
                            new IRERP_SM_Label(){width="5%"},
                            new IRERP_SM_Button(){ title=new IRERPControlTypes_HTMLString("انتقال وجه")
                        },
                           new IRERP_SM_Label(){width="0%"},
                       new IRERP_SM_Button(){ title=new IRERPControlTypes_HTMLString("انصراف")},
                           new IRERP_SM_Label(){width="5%"}
                      
                       }
                   }}} ;


    var tabset = new IRERP_SM_TabSet()
    {
        width="100%",
        height="100%",
        tabBarPosition = IRERPControlTypes_Side.top,
        tabBarAlign = IRERPControlTypes_Side.right,
        canEditTabTitles = true,
        titleEditEvent = IRERPControlTypes_TabTitleEditEvent.doubleClick,
        titleEditorTopOffset = 2,
        tabs = new IRERP_SM_Tab[]{
                      
                
                 
              
                    new IRERP_SM_Tab{
                       
                        title="اطلاعات",
                        pane=new IRERP_SM_VLayout(){members=new IRERPControlBase[]{
                        AccountInformation}}
                 },
                   new IRERP_SM_Tab{
                      
                        title="واریز اعتبار برای کاربر",

                        pane=new IRERP_SM_VLayout(){members=new IRERPControlBase[]{ BodyDepositAccount}}
                 }
                 ,
                   new IRERP_SM_Tab{
                         
                        title="انتقال اعتبار از کاربر ",

                        pane=new IRERP_SM_VLayout(){members=new IRERPControlBase[]{ TransferCredit}}
                 }
                 
        }
    };

    
    var secctionAccount = new IRERP_SM_SectionStack()
    {
        width="100%",
        height="100%",
        ID = this.CID("sectionStackAccount"),
        visibilityMode = IRERPControlTypes_visibilityMode.multiple,
        sections = new IRERP_SM_SectionStackSection[]{
                new IRERP_SM_SectionStackSection{
                    
                     title="اطلاعات کاربر",
                            expanded=true,
                             resizeable=false,
                             items=TopInfornation
                             },
                             new IRERP_SM_SectionStackSection
                             {
                                 title= "مشخصات واریز",
                                 expanded= true,
                                 resizeable= false,
                                 items=tabset
                             } 
            }
     
    };
    CurPage.OtherObjects += UsrAccountDs.ToString();
    CurPage.OtherObjects += UsrSupportDs.ToString();
    CurPage.OtherObjects += UsrDtlSupportDs.ToString();
    CurPage.DisplayControls = secctionAccount.ToStringAsMemberOfOther();
    }  
@Html.Raw(CurPage)
