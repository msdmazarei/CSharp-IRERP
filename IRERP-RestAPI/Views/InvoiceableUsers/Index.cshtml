@using IRERP_RestAPI.Models;
@using IRERP_RestAPI.Areas.Report.MetaModels;
@using IRERP_RestAPI.Bases.Extension.HTML;
@using IRERP_RestAPI.Bases.Extension.HTML.Controls;
@using IRERP_RestAPI.Bases.Extension.HTML.Controls.Types;
@using IRERP_RestAPI.Bases;
@using IRERP_RestAPI.Bases.Extension.Methods;
@using MsdLib.ExtentionFuncs.Strings;
@using IRERP_RestAPI.Bases.Skins;

<h2>InvoiceableUser</h2>
<script type="text/javascript">
@{
    IRERP_RestAPI.MetaModel.Support_MetaModel model = Model;
    List<IRERP_SM_DataSource> PageDataSources = new List<IRERP_SM_DataSource>();
    var UsrSupportDs = model.GenDS(
                            x => x.AllUsers,
                            SpecMetaModelProfile: IRERP_RestAPI.Bases.MetaDataDescriptors.IRERPProfile.SupportUser_Overview,
                            ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
                            ID: this.CID("UserSupportDs")
                        );

    var InvoiceableUsers = model.GenDS(
                            x => x.AllInvoiceableUser,
                            ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
                            ID: this.CID("InvoiceableUsersDs")
                            );
 
 PageDataSources.Add(UsrSupportDs);
 PageDataSources.Add(InvoiceableUsers);

 IRERPPageString CurPage = new IRERPPageString();

  var DyForm = AbbasiAdmin.GetGenetalDynamicForm(this.CID("UserForm"), data: new IRERP_SM_FromString( InvoiceableUsers.ID));
  var selectitem = AbbasiAdmin.GGSelectItem<InvoiceableUser, User>(
                        this.CID("selectuser"), 
                        x => x.User.UserID, 
                        "کاربر", 
                        x => x.DisplayName, 
                        x => x.UserID, 
                        null, 
                        this.CID("UserSupportDs"), 
                        true, 
                        true,
                        x => x.DisplayName,
                        x => x.Email, 
                        x => x.UserInformation.CustomerType);
  
  selectitem.pickListWidth = 500;
  
  DyForm.fields = new IRERP_SM_FormItem[]{selectitem};
 
  var GroupInsert = AbbasiAdmin.GetGenetalwindow(
                        this.CID("InsertGroup"), "insert", "50%", "70%", 
                        new IRERPControlBase[]{
                            AbbasiAdmin.GetGroupInsert(this.CID("InvoiceableUsersDs"),
                                    new IRERP_SM_FromString(UsrSupportDs.ID),
                                    this.CID("UserGrid1"),
                                    this.CID("InsertGroup"), 
                                    new IRERPControlTypes_ListGridFiled[]{
                                            new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.User>(x => x.DisplayName) },  
                                            new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.User>(x => x.Email) },  
                                            new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.User>(x => x.UserInformation.CustomerType)},  
                                        },
                                    new IRERPControlTypes_StringMethods(
                                        @"var grid="
                                        +this.CID("UserGrid1")+@";var maingrid="+this.CID("UserGrid")+@";var selecteds = grid.getSelectedRecords();
                                        for(var i=0;i<selecteds.length;i++){
                                        maingrid.addData({User___UserID:selecteds[i].UserID},
                                        function (dsResponse, data, dsRequest){
                                        var g = eval(dsRequest.params.__client_griduser_1);
                                            if (dsResponse.status == 0) {
                                            //Find Record Which Saved
                                                var selecteds = g.getSelectedRecords();
                                                var rec = null;
                                                    for (var i = 0; i < selecteds.length; i++) {
                                                        rec = selecteds[0];
                                                        if (rec.UserID == dsRequest.data.User___UserID) break;
                                                    }
                                                if (rec != null)
                                                    g.deselectRecord(rec);
                                            }
                                        return false;
        
                                        }
                                    ,{params:{__client_Operation:'GroupInsert',__client_griduser_1:grid.ID}});
                                    }
                                ")
                                 )}
                         );
    
  var Grid = AbbasiAdmin.GetGeneralListGrid(Datasource: new IRERP_SM_FromString(InvoiceableUsers.ID), ID: this.CID("UserGrid"),_CanEdit:false);
  Grid.fields = 
      new IRERPControlTypes_ListGridFiled[] {
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.AddedBy.DisplayName) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.AddedBy.Email) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.DateInserted),showIf=new IRERPControlTypes_StringMethods(@"""return false;""",true)},
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.PersianDateInserted) },
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.User.DisplayName) },
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.User.Email) },
             new IRERPControlTypes_ListGridFiled() { name = this.FN<InvoiceableUser>(x => x.User.UserInformation.CustomerType)},
  
        };
        var button= new IRERP_SM_ToolStripButton[]{
                                AbbasiAdmin.GetGenetalToolStripButton(
                                this.CID("AddGroup"), 
                                "درج گروهی", 
                                new IRERPControlTypes_StringMethods(@" ""OpenWindow(" + this.CID("InsertGroup") + @")"" ", true)
                                )
                                };
  var MasterDVS = AbbasiAdmin.GetGeneralDVS(
                        this.ViewContext,
                        DyForm, Grid, button, formName: "تعیین کاربران فاکتور",
                        hasEdit: false);

  MasterDVS.PageTitle = "تعیین کاربران فاکتور";

  CurPage= MasterDVS;
  
  string dses = "";
  PageDataSources.ForEach(x => dses += x.ToString());
  CurPage.OtherObjects = dses + CurPage.OtherObjects;
  CurPage.OtherObjects += GroupInsert.ToString();
  CurPage.Commands += this.CID("InsertGroup") + ".hide();";

}
@Html.Raw(CurPage)


    </script>
