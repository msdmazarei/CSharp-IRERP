@using IRERP_RestAPI.Bases.Extension.HTML;
@using IRERP_RestAPI.Bases.Extension.HTML.Controls;
@using IRERP_RestAPI.Bases.Extension.HTML.Controls.Types;
@using IRERP_RestAPI.Bases;
@using IRERP_RestAPI.Bases.Extension.Methods;
@using IRERP_RestAPI.Models;
@{
    
    IRERP_RestAPI.MetaModel.Support_MetaModel model = Model;
    IRERPPageString CurPage = new IRERPPageString();
    List<IRERP_SM_DataSource> PageDataSources = new List<IRERP_SM_DataSource>();
    
    var UsrAccountDs = model.GenDS(
x => x.SelectedUser.ACCs,
ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
ID: this.CID("UserAccountDs")
);
    var UsrDtlSupportDs = model.GenDS(
x => x.AllUsers,
SpecMetaModelProfile: IRERP_RestAPI.Bases.MetaDataDescriptors.IRERPProfile.Detail,
ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
ID: this.CID("UsrDtlSupportDs")
);
    var UsrSupportDs = model.GenDS(
              x => x.AllUsers, SpecMetaModelProfile: IRERP_RestAPI.Bases.MetaDataDescriptors.IRERPProfile.SupportUser_Overview,
           ControllerUrl: ((IRERP_RestAPI.Bases.IRERPController.IRERPController)this.ViewContext.Controller).ControllerUrl,
           ID: this.CID("UserSupportDs")
           );


    PageDataSources.Add(UsrAccountDs);
    PageDataSources.Add(UsrSupportDs);
    PageDataSources.Add(UsrDtlSupportDs);



    var UserSelectItem = IRERP_RestAPI.Bases.Skins.AbbasiAdmin.GGSelectItem<PetiakWifiUserAcc, User>(
      this.CID("selectUser"),
      x => x.User.UserID,
        "نام کاربری",
      x => x.DisplayName,
      x => x.UserID,
      null,
      this.CID("UserSupportDs"),
      new IRERPControlTypes_StringMethods("function(form,item,rec){"+
                     this.CID("UserGrid")+".fetchData({ _SelectedUser___UserID: rec });"+
                 
                     "}",true),
      true,
      true,
    x => x.DisplayName,
    x => x.UserID

    );
    
    var information = IRERP_RestAPI.Bases.Skins.AbbasiAdmin.GetGenetalDynamicForm(this.CID("UserForm"),data: new IRERP_SM_FromString(UsrAccountDs.ID));

    information.fields = new IRERP_SM_FormItem[]
      {
          UserSelectItem
             // new IRERP_SM_SelectItem(){
             //    ID=this.CID("cbotest"),
             //    name="FilterSelect",title="کد کاربری",displayField="Email",valueField="UserID", 
             //    pickListProperties=new IRERP_SM_ListGrid(){showFilterEditor=true},
             //    editorType=new IRERP_SM_FormItem(){type=IRERPControlTypes_FormItemType.SelectItem},
             //    pickListFields=new IRERP_SM_ListGridFiled[]{new IRERP_SM_ListGridFiled(){name="DisplayName"},
             //        new IRERP_SM_ListGridFiled(){name="Email"}  },
             //    optionDataSource=this.CID("UserSupportDs"),autoFetchData=true,
             //     changed=new IRERPControlTypes_StringMethods("function(form,item,rec){"+
             //        this.CID("UserGrid")+".fetchData({ _SelectedUser___UserID: rec });"+
                 
             //        "}",true),
             //}
         
               
             
        
    };
    //var detail = new IRERP_SM_DynamicForm()
    //{
    //    dataSource = new IRERP_SM_FromString(this.CID("UserSupportDs"), false),
    //    ID = this.CID("frmDetail"),
    //    numCols = 2,
    //    items = new IRERP_SM_FormItem[] {
    //           new IRERP_SM_StaticTextItem(){title="نام:",canEdit=false,name="DisplayName",titleStyle="Blacklabel1",textBoxStyle="Blacklabel1"},
           
    //   }
    //};



    var Grid = IRERP_RestAPI.Bases.Skins.AbbasiAdmin.GetGeneralListGrid(Datasource: new IRERP_SM_FromString(UsrAccountDs.ID), ID: this.CID("UserGrid"));
    Grid.fields =
new IRERPControlTypes_ListGridFiled[] {
      
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Balance)}, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Credit) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Debit) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.TransDate) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Description) }, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.Operator.DisplayName),title="نام اپراتور"}, 
             new IRERPControlTypes_ListGridFiled() { name = this.FN<IRERP_RestAPI.Models.PetiakWifiUserAcc>(x => x.ActivityID),title="مرجع داخلی"}, 
             
           
        };


    var secctionAccount = new IRERP_SM_SectionStack()
    {
        width = "100%",
        height = "100%",
        ID = this.CID("sectionStackAccount"),
        visibilityMode = IRERPControlTypes_visibilityMode.multiple,
        sections = new IRERP_SM_SectionStackSection[]{
                new IRERP_SM_SectionStackSection{
                    
                     title="اطلاعات کاربر",
                            expanded=true,
                             resizeable=false,
                             items=information
                             },
                             new IRERP_SM_SectionStackSection
                             {
                                 title= "مشخصات واریز",
                                 expanded= true,
                                 resizeable= false,
                                 items=Grid
                             } 
            }

    };
    string dses = "";
    PageDataSources.ForEach(x => dses += x.ToString());
    CurPage.OtherObjects = dses + CurPage.OtherObjects;
    CurPage.DisplayControls = secctionAccount.ToStringAsMemberOfOther();
    
 }
@Html.Raw(CurPage)
